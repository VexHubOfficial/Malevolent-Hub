-- ==================== SECTION 1 ====================
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local players = game:GetService("Players")
local debris = game:GetService("Debris")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MalHub"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0,120,0,40)
toggleButton.Position = UDim2.new(0,20,0,20)
toggleButton.Text = "MalHub"
toggleButton.BackgroundColor3 = Color3.fromRGB(200,0,0)
toggleButton.TextColor3 = Color3.fromRGB(255,255,255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextScaled = true
toggleButton.Active = true
toggleButton.Draggable = true
toggleButton.Parent = screenGui

-- Main Panel (50% transparent)
local panel = Instance.new("Frame")
panel.Size = UDim2.new(0,350,0,350)
panel.Position = UDim2.new(0,20,0,70)
panel.BackgroundColor3 = Color3.fromRGB(40,10,10)
panel.BackgroundTransparency = 0.5
panel.BorderSizePixel = 0
panel.Visible = false
panel.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0,10)
uiCorner.Parent = panel

-- Tab Bar
local tabBar = Instance.new("Frame")
tabBar.Size = UDim2.new(0,100,1,0)
tabBar.Position = UDim2.new(0,0,0,0)
tabBar.BackgroundColor3 = Color3.fromRGB(80,0,0)
tabBar.BorderSizePixel = 0
tabBar.Parent = panel

local tabCorner = Instance.new("UICorner")
tabCorner.CornerRadius = UDim.new(0,10)
tabCorner.Parent = tabBar

local tabFrames = {}

-- Tabs: Player & Settings
local tabs = {"Player","Settings"}
for i, tabName in ipairs(tabs) do
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1,0,0,50)
    button.Position = UDim2.new(0,0,0,(i-1)*50)
    button.Text = tabName
    button.Font = Enum.Font.GothamBold
    button.TextColor3 = Color3.fromRGB(255,255,255)
    button.BackgroundColor3 = Color3.fromRGB(150,0,0)
    button.Parent = tabBar

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,5)
    corner.Parent = button

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1,-100,1,0)
    frame.Position = UDim2.new(0,100,0,0)
    frame.BackgroundTransparency = 1
    frame.Visible = (i==1)
    frame.Parent = panel
    tabFrames[tabName] = frame

    button.MouseButton1Click:Connect(function()
        for _, f in pairs(tabFrames) do f.Visible = false end
        frame.Visible = true
    end)
end

-- ========== UTILITIES: Slider and Toggle Functions (Red Theme) ==========
local function createSlider(parent,labelText,min,max,default,callback,posY)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0,200,0,30)
    label.Position = UDim2.new(0,20,0,posY)
    label.Text = labelText..": "..default
    label.Font = Enum.Font.Gotham
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = parent

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0,200,0,20)
    sliderFrame.Position = UDim2.new(0,20,0,posY+30)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(120,0,0)
    sliderFrame.Parent = parent

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((default-min)/(max-min),0,1,0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(255,0,0)
    sliderFill.Parent = sliderFrame

    local dragging = false
    sliderFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
    end)
    sliderFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
    end)
    uis.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativeX = math.clamp(input.Position.X - sliderFrame.AbsolutePosition.X,0,sliderFrame.AbsoluteSize.X)
            local value = min + (relativeX/sliderFrame.AbsoluteSize.X)*(max-min)
            value = math.floor(value/5)*5 -- round to nearest 5
            sliderFill.Size = UDim2.new((value-min)/(max-min),0,1,0)
            label.Text = labelText..": "..value
            callback(value)
        end
    end)

    -- + and - buttons
    local minusBtn = Instance.new("TextButton")
    minusBtn.Size = UDim2.new(0,25,0,20)
    minusBtn.Position = UDim2.new(0,230,0,posY+30)
    minusBtn.Text = "-"
    minusBtn.BackgroundColor3 = Color3.fromRGB(150,0,0)
    minusBtn.TextColor3 = Color3.fromRGB(255,255,255)
    minusBtn.Font = Enum.Font.GothamBold
    minusBtn.Parent = parent
    minusBtn.MouseButton1Click:Connect(function()
        default = math.max(min, default-5)
        sliderFill.Size = UDim2.new((default-min)/(max-min),0,1,0)
        label.Text = labelText..": "..default
        callback(default)
    end)

    local plusBtn = Instance.new("TextButton")
    plusBtn.Size = UDim2.new(0,25,0,20)
    plusBtn.Position = UDim2.new(0,260,0,posY+30)
    plusBtn.Text = "+"
    plusBtn.BackgroundColor3 = Color3.fromRGB(150,0,0)
    plusBtn.TextColor3 = Color3.fromRGB(255,255,255)
    plusBtn.Font = Enum.Font.GothamBold
    plusBtn.Parent = parent
    plusBtn.MouseButton1Click:Connect(function()
        default = math.min(max, default+5)
        sliderFill.Size = UDim2.new((default-min)/(max-min),0,1,0)
        label.Text = labelText..": "..default
        callback(default)
    end)
end

local function createToggleButton(parent,labelText,default,callback,posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,150,0,30)
    btn.Position = UDim2.new(0,20,0,posY)
    btn.Text = labelText
    btn.BackgroundColor3 = default and Color3.fromRGB(255,0,0) or Color3.fromRGB(120,0,0)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.GothamBold
    btn.Parent = parent

    btn.MouseButton1Click:Connect(function()
        default = not default
        btn.BackgroundColor3 = default and Color3.fromRGB(255,0,0) or Color3.fromRGB(120,0,0)
        callback(default)
    end)
end

-- ================= PLAYER TAB =================
local playerTab = tabFrames["Player"]
local sliderY = 20

createSlider(playerTab,"Speed",16,100,humanoid.WalkSpeed,function(val) humanoid.WalkSpeed=val end,sliderY)
createSlider(playerTab,"JumpPower",50,200,humanoid.JumpPower,function(val) humanoid.JumpPower=val end,sliderY+70)

-- Infinite Jump & Noclip (togglable)
local infiniteJump = false
createToggleButton(playerTab,"Infinite Jump",false,function(state) infiniteJump=state end,sliderY+140)

local noclipEnabled = false
createToggleButton(playerTab,"Noclip",false,function(state) noclipEnabled=state end,sliderY+180)

-- Anti-Fling Whitelist placeholder (filled in Section 2)
local flingWhitelist = {}

-- Infinite Jump logic
uis.JumpRequest:Connect(function()
    if infiniteJump then humanoid:ChangeState(Enum.HumanoidStateType.Jumping) end
end)

-- Noclip logic
runService.Stepped:Connect(function()
    if noclipEnabled and character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then part.CanCollide=false end
        end
    elseif character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then part.CanCollide=true end
        end
    end
end)

-- ================= SETTINGS TAB =================
local settingsTab = tabFrames["Settings"]
local toggleY2 = 20

local antiFlingEnabled = false
createToggleButton(settingsTab,"Anti-Fling",false,function(state) antiFlingEnabled=state end,toggleY2)

local flingAuraEnabled = false
createToggleButton(settingsTab,"Fling Aura",false,function(state) flingAuraEnabled=state end,toggleY2+50)

local espEnabled = false
createToggleButton(settingsTab,"ESP / Highlight",false,function(state) espEnabled=state end,toggleY2+100)

-- Toggle panel visibility
toggleButton.MouseButton1Click:Connect(function() panel.Visible = not panel.Visible end)
